name: Build with conan

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Building ${{ matrix.build_type }} ${{ matrix.profile || matrix.profile_host }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # Debug build type
          - os: macos-latest
            profile: macos-latest-armv8
            build_type: Debug

          # RelWithDebInfo build type
          - os: macos-latest
            profile: macos-latest-armv8
            build_type: RelWithDebInfo

          # Release build type
          - os: ubuntu-latest
            profile: ubuntu-latest-x86_64
            build_type: Release
          #- os: macos-latest
          #  profile_build: macos-latest-armv8
          #  profile_host: macos-latest-x86_64
          #  build_type: Release
          - os: macos-latest
            profile: macos-latest-armv8
            build_type: Release
          - os: [self-hosted, Windows, X64]
            profile: windows-latest-x86_64
            build_type: Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set CONAN_HOME on Windows only
        if: runner.os == 'Windows'
        run: echo "CONAN_HOME=D:\a\b\" >> $Env:GITHUB_ENV

      - name: Install Conan
        uses: conan-io/setup-conan@v1

      # following https://docs.conan.io/2/devops/devops_local_recipes_index.html#building-binaries-from-a-private-conan-center-index-fork
      - name: Setup
        run: |
          conan config install ./.config/global.conf
          # local has to be before artifactory to ensure that the local recipes are used for buiding
          conan remote add local .
          conan remote remove conancenter
          conan remote add oc https://artifactory.owncloud-demo.com/artifactory/api/conan/conan-local
          conan remote login oc ${{ secrets.CONAN_USER }} -p ${{ secrets.CONAN_PASSWORD }}
          conan remote list
          conan profile show

      - name: Disk Space Before
        run: |
          df -h

      - name: Clean Disk
        if: runner.os == 'Linux'
        run: |
          echo "Before cleanup:"
          df -h
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf /usr/local/lib/android
          echo "After cleanup:"
          df -h

      - name: Build
        if: matrix.profile != null
        run: |
          conan remove "*" -c
          conan install . --profile=.github/profiles/${{ matrix.profile }}.conanprofile -s build_type=${{ matrix.build_type }} --build=missing

      - name: Cross-Build
        if: matrix.profile_build != null
        run: |
          conan remove "*" -c
          conan install . --profile:host=.github/profiles/${{ matrix.profile_host }}.conanprofile --profile:build=.github/profiles/${{ matrix.profile_build }}.conanprofile -s build_type=${{ matrix.build_type }} --build=missing

          #conan build . -pr:h x86-64-profile -pr:b arm-profile
      - name: Disk Space After
        run: |
          df -h

      - name: Upload
        if: ${{ github.ref == 'refs/heads/master' }}
        run: |
          conan upload -r oc "*" -c
